---
// import critical from 'styles/critical.scss?inline';
// import 'styles/main.scss';
const page = Astro.locals.seo;

export interface Props {
    title?: string;
    description?: string;
    canonicalURL?: URL | string;
    image?: string;
}

const title = Astro.props.title || page?.title;
const description = Astro.props.description || page?.description;
const canonicalURL = Astro.props.canonicalURL || new URL(Astro.url.pathname, Astro.site);
const image = new URL(Astro.props.image || './ogp.jpg', Astro.site);
const site = page?.site;
const creator = page?.creator;
---

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="format-detection" content="telephone=no" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<base href="/">

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<link rel="sitemap" type="application/xml" title="Sitemap" href="/sitemap-index.xml" />
<link rel="canonical" href={canonicalURL} />

{/* Open Graph / Facebook  */}
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />

{/* Twitter */}
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image} />
{site && <meta property="twitter:site" content={site} />}
{creator && <meta property="twitter:creator" content={creator} />}

<!-- <style media="all" is:inline set:text={critical} /> -->